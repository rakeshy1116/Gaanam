{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshchowdary/Documents/Foundations-Software-Engineering/team3-Gaanam-project/src/Dashboard.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n\n// // const Dashboard = () => {\n// //   const [playlists, setPlaylists] = useState([]);\n// //   const [topSong, setTopSong] = useState({});\n// //   const [topArtist, setTopArtist] = useState({});\n// //   const [topGenres, setTopGenres] = useState([]);\n// //   const [totalMinutes, setTotalMinutes] = useState(0);\n\n// //   useEffect(() => {\n// //     // fetch('http://127.0.0.1:5000/playlists')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setPlaylists(data))\n// //     //   .catch(error => console.error('Error:', error));\n\n// //     fetch('http://127.0.0.1:5000/topSong')\n// //       .then(response => response.json())\n// //       .then(data => {\n// //             console.log(data)\n// //             setTopSong(data)\n// //         })\n// //       .catch(error => console.error('Error:', error));\n\n// //     // fetch('http://127.0.0.1:5000/topArtist')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setTopArtist(data))\n// //     //   .catch(error => console.error('Error:', error));\n\n// //     // fetch('http://127.0.0.1:5000/topGenres')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setTopGenres(data))\n// //     //   .catch(error => console.error('Error:', error));\n\n// //     // fetch('http://127.0.0.1:5000/totalMinutes')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setTotalMinutes(data))\n// //     //   .catch(error => console.error('Error:', error));\n// //   }, []);\n\n// //   return (\n// //     <div className=\"dashboard\">\n// //       <div className=\"box\">Playlists: {JSON.stringify(playlists)}</div>\n// //       <div className=\"box\">Top Song: {JSON.stringify(topSong)}</div>\n// //       <div className=\"box\">Top Artist: {JSON.stringify(topArtist)}</div>\n// //       <div className=\"box\">Top Genres: {JSON.stringify(topGenres)}</div>\n// //       <div className=\"box\">Total Minutes: {totalMinutes}</div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard;\n\n// import React, { useState } from 'react';\n// import './Dashboard.css';\n\n// const Dashboard = () => {\n//   const [songData, setSongData] = useState(null);\n\n//   const handleClick = () => {\n//     console.log(\"clicked\")\n//     fetch('http://127.0.0.1:5000/topSong')\n//       .then(response => response.json())\n//       .then(data => setSongData(data))\n//       .catch(error => console.error('Error:', error));\n//   };\n\n// //   return (\n// //     <div>\n// //         <nav>\n// //          <button onClick={handleClick}>Get Top Songs</button>\n// //        </nav>\n// //         {songData && <div>{songData}</div>}\n// //     </div>\n// //   )\n\n//   return (\n//     <div className=\"dashboard\">\n//     <nav>\n//         <button onClick={handleClick}>Get Top Songs</button>\n//     </nav>\n//      {/* {songData && <div>{songData}</div>} */}\n//       {songData && (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Image</th>\n//               <th>Song Name</th>\n//               <th>Artist</th>\n//               <th>Preview</th>\n//               <th>ID</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {songData.map((song, index) => (\n//               <tr key={index}>\n//                 <td><img className=\"song-image\" src={song.image} alt={song.name} /></td>\n//                 <td>{song.name}</td>\n//                 <td>{song.artist}</td>\n//                 <td>\n//                   <audio controls>\n//                     <source src={song.preview} type=\"audio/mpeg\" />\n//                     Your browser does not support the audio element.\n//                   </audio>\n//                 </td>\n//                 <td>{song.id}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// import React, { useState } from 'react';\n// import GetTopSong from './GetTopSong';\n// import GetTopArtist from './GetTopArtist';\n// import './Dashboard.css';\n// import { Navigate } from 'react-router-dom';\n\n// const Dashboard = ({ isLoggedIn }) => {\n//   if (!isLoggedIn) {\n//     return <Navigate to=\"/\" />;\n//   }\n\n//   // Your Dashboard code here\n// // const Dashboard = () => {\n// //   const [showTopSongs, setShowTopSongs] = useState(false);\n// //   const [showTopArtist, setShowTopArtist] = useState(false);\n// const [displayComponent, setDisplayComponent] = useState('');\n\n//   const handleSongsClick = () => {\n\n//     setDisplayComponent(\"songs\");\n//   };\n\n//   const handleArtistClick = () => {\n\n//     setDisplayComponent(\"artists\");\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <nav>\n//         <button onClick={handleSongsClick}>Get Top Songs</button>\n//         <button onClick={handleArtistClick}>Get Top Artist</button>\n//       </nav>\n//       {displayComponent === \"songs\" && <GetTopSong />}\n//       {displayComponent === \"artists\" && <GetTopArtist />}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useState } from 'react';\nimport GetTopSong from './GetTopSong';\nimport GetTopArtist from './GetTopArtist';\nimport { Navigate } from 'react-router-dom';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // console.log(\"I am in dashboard\")\n  const [isLoggedIn, setIsLoggedIn] = useState(true); // Add this line\n  const [displayComponent, setDisplayComponent] = useState('');\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('');\n\n  // Update this function to set isLoggedIn to true when the user logs in\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  // const handleSongsClick = () => {\n  //   setDisplayComponent(\"songs\");\n  //   setSelectedOption('songs');\n  //   setShowOptions(true);\n  // };\n  const handleArtistClick = () => {\n    setDisplayComponent(`artists`);\n    setSelectedOption(`artists`);\n  };\n  const handleSongsClick = option => {\n    setDisplayComponent(`songs}`);\n    setSelectedOption(`songs`);\n    setShowOptions(true);\n  };\n  const handleArtistClick_4 = option => {\n    setDisplayComponent(`artists_4`);\n    setSelectedOption(`artists_4`);\n  };\n  const handleSongsClick_4 = option => {\n    setDisplayComponent(`songs_4`);\n    setSelectedOption(`songs_4`);\n    setShowOptions(true);\n  };\n  const handleArtistClick_6 = option => {\n    setDisplayComponent(`artists_6`);\n    setSelectedOption(`artists_6`);\n  };\n  const handleSongsClick_6 = option => {\n    setDisplayComponent(`songs_6`);\n    setSelectedOption(`songs_6`);\n    setShowOptions(true);\n  };\n  const handleArtistClick_12 = option => {\n    setDisplayComponent(`artists_12`);\n    setSelectedOption(`artists_12`);\n  };\n  const handleSongsClick_12 = option => {\n    setDisplayComponent(`songs_12`);\n    setSelectedOption(`songs_12`);\n    setShowOptions(true);\n  };\n  const handleCreatePlaylist = () => {\n    fetch('http://127.0.0.1:5000/createPlaylist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: 'your_user_id',\n        playlist_name: 'new_playlist_name',\n        playlist_description: 'your_playlist_description',\n        playlist_public: true\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleAddTracks = () => {\n    fetch('/addTracks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        playlist_id: '32SR2YzI56EFpKwHLHgjLU',\n        tracks: ['4O2DJnDHV46KfRZsOxrQzO'] // replace with actual track ids\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  // If the user is not logged in, redirect them to the login page\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSongsClick,\n      children: \"Show Top Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleArtistClick,\n      children: \"Show Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePlaylist,\n      children: \"Create Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTracks,\n      children: \"Add Tracks to Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), selectedOption === 'songs' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSongsClick_4,\n        children: \"Last 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSongsClick_6,\n        children: \" Last 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSongsClick_12,\n        children: \"Last 12 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), selectedOption === 'artists' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleArtistClick_4,\n        children: \"Last 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleArtistClick_6,\n        children: \"Last 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleArtistClick_12,\n        children: \"Last 12 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), displayComponent === 'songs_4' && /*#__PURE__*/_jsxDEV(GetTopSong, {\n      url: \"http://127.0.0.1:5000/topSong/short_term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 42\n    }, this), displayComponent === 'songs_6' && /*#__PURE__*/_jsxDEV(GetTopSong, {\n      url: \"http://127.0.0.1:5000/topSong/medium_term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 42\n    }, this), displayComponent === 'songs_12' && /*#__PURE__*/_jsxDEV(GetTopSong, {\n      url: \"http://127.0.0.1:5000/topSong/long_term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 43\n    }, this), displayComponent === 'artists_4' && /*#__PURE__*/_jsxDEV(GetTopArtist, {\n      url: \"http://127.0.0.1:5000/topArtist/short_term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 44\n    }, this), displayComponent === 'artists_6' && /*#__PURE__*/_jsxDEV(GetTopArtist, {\n      url: \"http://127.0.0.1:5000/topArtist/medium_term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 44\n    }, this), displayComponent === 'artists_12' && /*#__PURE__*/_jsxDEV(GetTopArtist, {\n      url: \"http://127.0.0.1:5000/topArtist/long_term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"yVl5tZVkfBcAzbqe5TBPa4C6jjk=\");\n_c = Dashboard;\nexport default Dashboard;\n\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n// import TopSongs from './GetTopSong';  // Import your TopSongs component\n// import TopArtists from './GetTopArtist';  // Import your TopArtists component\n\n// function Dashboard() {\n//   return (\n//     <Router>\n//       <Routes>\n//       <div>\n//         <nav>\n//           <ul>\n//             <li>\n//               <Link to=\"/topSongs\">Show Top Songs</Link>\n//             </li>\n//             <li>\n//               <Link to=\"/topArtists\">Show Top Artists</Link>\n//             </li>\n//           </ul>\n//         </nav>\n\n//         <Route path=\"/topSongs\" component={TopSongs} />\n//         <Route path=\"/topArtists\" component={TopArtists} />\n//       </div>\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","GetTopSong","GetTopArtist","Navigate","jsxDEV","_jsxDEV","Dashboard","_s","isLoggedIn","setIsLoggedIn","displayComponent","setDisplayComponent","showOptions","setShowOptions","selectedOption","setSelectedOption","handleLogin","handleArtistClick","handleSongsClick","option","handleArtistClick_4","handleSongsClick_4","handleArtistClick_6","handleSongsClick_6","handleArtistClick_12","handleSongsClick_12","handleCreatePlaylist","fetch","method","headers","body","JSON","stringify","user_id","playlist_name","playlist_description","playlist_public","then","response","json","data","console","log","catch","error","handleAddTracks","playlist_id","tracks","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","url","_c","$RefreshReg$"],"sources":["/Users/rakeshchowdary/Documents/Foundations-Software-Engineering/team3-Gaanam-project/src/Dashboard.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\n\n// // const Dashboard = () => {\n// //   const [playlists, setPlaylists] = useState([]);\n// //   const [topSong, setTopSong] = useState({});\n// //   const [topArtist, setTopArtist] = useState({});\n// //   const [topGenres, setTopGenres] = useState([]);\n// //   const [totalMinutes, setTotalMinutes] = useState(0);\n\n// //   useEffect(() => {\n// //     // fetch('http://127.0.0.1:5000/playlists')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setPlaylists(data))\n// //     //   .catch(error => console.error('Error:', error));\n\n// //     fetch('http://127.0.0.1:5000/topSong')\n// //       .then(response => response.json())\n// //       .then(data => {\n// //             console.log(data)\n// //             setTopSong(data)\n// //         })\n// //       .catch(error => console.error('Error:', error));\n\n// //     // fetch('http://127.0.0.1:5000/topArtist')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setTopArtist(data))\n// //     //   .catch(error => console.error('Error:', error));\n\n// //     // fetch('http://127.0.0.1:5000/topGenres')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setTopGenres(data))\n// //     //   .catch(error => console.error('Error:', error));\n\n// //     // fetch('http://127.0.0.1:5000/totalMinutes')\n// //     //   .then(response => response.json())\n// //     //   .then(data => setTotalMinutes(data))\n// //     //   .catch(error => console.error('Error:', error));\n// //   }, []);\n\n// //   return (\n// //     <div className=\"dashboard\">\n// //       <div className=\"box\">Playlists: {JSON.stringify(playlists)}</div>\n// //       <div className=\"box\">Top Song: {JSON.stringify(topSong)}</div>\n// //       <div className=\"box\">Top Artist: {JSON.stringify(topArtist)}</div>\n// //       <div className=\"box\">Top Genres: {JSON.stringify(topGenres)}</div>\n// //       <div className=\"box\">Total Minutes: {totalMinutes}</div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard;\n\n// import React, { useState } from 'react';\n// import './Dashboard.css';\n\n// const Dashboard = () => {\n//   const [songData, setSongData] = useState(null);\n\n//   const handleClick = () => {\n//     console.log(\"clicked\")\n//     fetch('http://127.0.0.1:5000/topSong')\n//       .then(response => response.json())\n//       .then(data => setSongData(data))\n//       .catch(error => console.error('Error:', error));\n//   };\n\n// //   return (\n// //     <div>\n// //         <nav>\n// //          <button onClick={handleClick}>Get Top Songs</button>\n// //        </nav>\n// //         {songData && <div>{songData}</div>}\n// //     </div>\n// //   )\n\n//   return (\n//     <div className=\"dashboard\">\n//     <nav>\n//         <button onClick={handleClick}>Get Top Songs</button>\n//     </nav>\n//      {/* {songData && <div>{songData}</div>} */}\n//       {songData && (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Image</th>\n//               <th>Song Name</th>\n//               <th>Artist</th>\n//               <th>Preview</th>\n//               <th>ID</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {songData.map((song, index) => (\n//               <tr key={index}>\n//                 <td><img className=\"song-image\" src={song.image} alt={song.name} /></td>\n//                 <td>{song.name}</td>\n//                 <td>{song.artist}</td>\n//                 <td>\n//                   <audio controls>\n//                     <source src={song.preview} type=\"audio/mpeg\" />\n//                     Your browser does not support the audio element.\n//                   </audio>\n//                 </td>\n//                 <td>{song.id}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// import React, { useState } from 'react';\n// import GetTopSong from './GetTopSong';\n// import GetTopArtist from './GetTopArtist';\n// import './Dashboard.css';\n// import { Navigate } from 'react-router-dom';\n\n// const Dashboard = ({ isLoggedIn }) => {\n//   if (!isLoggedIn) {\n//     return <Navigate to=\"/\" />;\n//   }\n\n//   // Your Dashboard code here\n// // const Dashboard = () => {\n// //   const [showTopSongs, setShowTopSongs] = useState(false);\n// //   const [showTopArtist, setShowTopArtist] = useState(false);\n// const [displayComponent, setDisplayComponent] = useState('');\n\n\n//   const handleSongsClick = () => {\n\n//     setDisplayComponent(\"songs\");\n//   };\n\n//   const handleArtistClick = () => {\n\n//     setDisplayComponent(\"artists\");\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <nav>\n//         <button onClick={handleSongsClick}>Get Top Songs</button>\n//         <button onClick={handleArtistClick}>Get Top Artist</button>\n//       </nav>\n//       {displayComponent === \"songs\" && <GetTopSong />}\n//       {displayComponent === \"artists\" && <GetTopArtist />}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useState } from 'react';\nimport GetTopSong from './GetTopSong';\nimport GetTopArtist from './GetTopArtist';\nimport { Navigate } from 'react-router-dom';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  // console.log(\"I am in dashboard\")\n  const [isLoggedIn, setIsLoggedIn] = useState(true); // Add this line\n  const [displayComponent, setDisplayComponent] = useState('');\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('');\n\n\n  // Update this function to set isLoggedIn to true when the user logs in\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  // const handleSongsClick = () => {\n  //   setDisplayComponent(\"songs\");\n  //   setSelectedOption('songs');\n  //   setShowOptions(true);\n  // };\n  const handleArtistClick = () => {\n    setDisplayComponent(`artists`);\n    setSelectedOption(`artists`);\n  };\n  const handleSongsClick = (option) => {\n    setDisplayComponent(`songs}`);\n    setSelectedOption(`songs`);\n    setShowOptions(true);\n  };\n  const handleArtistClick_4 = (option) => {\n    setDisplayComponent(`artists_4`);\n    setSelectedOption(`artists_4`);\n  };\n  const handleSongsClick_4 = (option) => {\n    setDisplayComponent(`songs_4`);\n    setSelectedOption(`songs_4`);\n    setShowOptions(true);\n  };\n  const handleArtistClick_6 = (option) => {\n    setDisplayComponent(`artists_6`);\n    setSelectedOption(`artists_6`);\n  };\n  const handleSongsClick_6 = (option) => {\n    setDisplayComponent(`songs_6`);\n    setSelectedOption(`songs_6`);\n    setShowOptions(true);\n  };\n  const handleArtistClick_12 = (option) => {\n    setDisplayComponent(`artists_12`);\n    setSelectedOption(`artists_12`);\n  };\n  const handleSongsClick_12 = (option) => {\n    setDisplayComponent(`songs_12`);\n    setSelectedOption(`songs_12`);\n    setShowOptions(true);\n  };\n\n  const handleCreatePlaylist = () => {\n    fetch('http://127.0.0.1:5000/createPlaylist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user_id: 'your_user_id',\n        playlist_name: 'new_playlist_name',\n        playlist_description: 'your_playlist_description',\n        playlist_public: true,\n      }),\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  };\n\n  const handleAddTracks = () => {\n    fetch('/addTracks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        playlist_id: '32SR2YzI56EFpKwHLHgjLU',\n        tracks: ['4O2DJnDHV46KfRZsOxrQzO'], // replace with actual track ids\n      }),\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  };\n\n  \n  \n  \n  // If the user is not logged in, redirect them to the login page\n  if (!isLoggedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <button onClick={handleSongsClick}>Show Top Songs</button>\n      <button onClick={handleArtistClick}>Show Top Artists</button>\n      <button onClick={handleCreatePlaylist}>Create Playlist</button>\n      <button onClick={handleAddTracks}>Add Tracks to Playlist</button>\n\n\n      {selectedOption === 'songs' && (\n        <div>\n          <button onClick={handleSongsClick_4}>Last 4 weeks</button>\n          <button onClick={handleSongsClick_6}> Last 6 months</button>\n          <button onClick={handleSongsClick_12}>Last 12 months</button>\n        </div>\n      )}\n      {selectedOption === 'artists' && (\n        <div>\n          <button onClick={handleArtistClick_4}>Last 4 weeks</button>\n          <button onClick={handleArtistClick_6}>Last 6 months</button>\n          <button onClick={handleArtistClick_12}>Last 12 months</button>\n        </div>\n      )}\n\n      {/* {displayComponent === 'songs' && <GetTopSong url = \"http://127.0.0.1:5000/topSong/short_term\" />} */}\n      {displayComponent === 'songs_4' && <GetTopSong url = \"http://127.0.0.1:5000/topSong/short_term\"/>}\n      {displayComponent === 'songs_6' && <GetTopSong url = \"http://127.0.0.1:5000/topSong/medium_term\"/>}\n      {displayComponent === 'songs_12' && <GetTopSong  url = \"http://127.0.0.1:5000/topSong/long_term\"/>}\n\n      {/* {displayComponent === 'artists' && <GetTopArtist  url = \"http://127.0.0.1:5000/topArtist/short_term\"/>} */}\n      {displayComponent === 'artists_4' && <GetTopArtist  url = \"http://127.0.0.1:5000/topArtist/short_term\"/>}\n      {displayComponent === 'artists_6' && <GetTopArtist  url = \"http://127.0.0.1:5000/topArtist/medium_term\"/>}\n      {displayComponent === 'artists_12' && <GetTopArtist  url = \"http://127.0.0.1:5000/topArtist/long_term\"/>}\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n// import TopSongs from './GetTopSong';  // Import your TopSongs component\n// import TopArtists from './GetTopArtist';  // Import your TopArtists component\n\n// function Dashboard() {\n//   return (\n//     <Router>\n//       <Routes>\n//       <div>\n//         <nav>\n//           <ul>\n//             <li>\n//               <Link to=\"/topSongs\">Show Top Songs</Link>\n//             </li>\n//             <li>\n//               <Link to=\"/topArtists\">Show Top Artists</Link>\n//             </li>\n//           </ul>\n//         </nav>\n\n//         <Route path=\"/topSongs\" component={TopSongs} />\n//         <Route path=\"/topArtists\" component={TopArtists} />\n//       </div>\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default Dashboard;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAGxD;EACA,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxBP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BN,mBAAmB,CAAE,SAAQ,CAAC;IAC9BI,iBAAiB,CAAE,SAAQ,CAAC;EAC9B,CAAC;EACD,MAAMG,gBAAgB,GAAIC,MAAM,IAAK;IACnCR,mBAAmB,CAAE,QAAO,CAAC;IAC7BI,iBAAiB,CAAE,OAAM,CAAC;IAC1BF,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAMO,mBAAmB,GAAID,MAAM,IAAK;IACtCR,mBAAmB,CAAE,WAAU,CAAC;IAChCI,iBAAiB,CAAE,WAAU,CAAC;EAChC,CAAC;EACD,MAAMM,kBAAkB,GAAIF,MAAM,IAAK;IACrCR,mBAAmB,CAAE,SAAQ,CAAC;IAC9BI,iBAAiB,CAAE,SAAQ,CAAC;IAC5BF,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAMS,mBAAmB,GAAIH,MAAM,IAAK;IACtCR,mBAAmB,CAAE,WAAU,CAAC;IAChCI,iBAAiB,CAAE,WAAU,CAAC;EAChC,CAAC;EACD,MAAMQ,kBAAkB,GAAIJ,MAAM,IAAK;IACrCR,mBAAmB,CAAE,SAAQ,CAAC;IAC9BI,iBAAiB,CAAE,SAAQ,CAAC;IAC5BF,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAMW,oBAAoB,GAAIL,MAAM,IAAK;IACvCR,mBAAmB,CAAE,YAAW,CAAC;IACjCI,iBAAiB,CAAE,YAAW,CAAC;EACjC,CAAC;EACD,MAAMU,mBAAmB,GAAIN,MAAM,IAAK;IACtCR,mBAAmB,CAAE,UAAS,CAAC;IAC/BI,iBAAiB,CAAE,UAAS,CAAC;IAC7BF,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMa,oBAAoB,GAAGA,CAAA,KAAM;IACjCC,KAAK,CAAC,sCAAsC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAE,cAAc;QACvBC,aAAa,EAAE,mBAAmB;QAClCC,oBAAoB,EAAE,2BAA2B;QACjDC,eAAe,EAAE;MACnB,CAAC;IACH,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BlB,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBc,WAAW,EAAE,wBAAwB;QACrCC,MAAM,EAAE,CAAC,wBAAwB,CAAC,CAAE;MACtC,CAAC;IACH,CAAC,CAAC,CACDV,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;;EAKD;EACA,IAAI,CAACpC,UAAU,EAAE;IACf,oBAAOH,OAAA,CAACF,QAAQ;MAAC6C,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,oBACE/C,OAAA;IAAAgD,QAAA,gBACEhD,OAAA;MAAQiD,OAAO,EAAEpC,gBAAiB;MAAAmC,QAAA,EAAC;IAAc;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D/C,OAAA;MAAQiD,OAAO,EAAErC,iBAAkB;MAAAoC,QAAA,EAAC;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7D/C,OAAA;MAAQiD,OAAO,EAAE5B,oBAAqB;MAAA2B,QAAA,EAAC;IAAe;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/D/C,OAAA;MAAQiD,OAAO,EAAET,eAAgB;MAAAQ,QAAA,EAAC;IAAsB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGhEtC,cAAc,KAAK,OAAO,iBACzBT,OAAA;MAAAgD,QAAA,gBACEhD,OAAA;QAAQiD,OAAO,EAAEjC,kBAAmB;QAAAgC,QAAA,EAAC;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1D/C,OAAA;QAAQiD,OAAO,EAAE/B,kBAAmB;QAAA8B,QAAA,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5D/C,OAAA;QAAQiD,OAAO,EAAE7B,mBAAoB;QAAA4B,QAAA,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CACN,EACAtC,cAAc,KAAK,SAAS,iBAC3BT,OAAA;MAAAgD,QAAA,gBACEhD,OAAA;QAAQiD,OAAO,EAAElC,mBAAoB;QAAAiC,QAAA,EAAC;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3D/C,OAAA;QAAQiD,OAAO,EAAEhC,mBAAoB;QAAA+B,QAAA,EAAC;MAAa;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5D/C,OAAA;QAAQiD,OAAO,EAAE9B,oBAAqB;QAAA6B,QAAA,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CACN,EAGA1C,gBAAgB,KAAK,SAAS,iBAAIL,OAAA,CAACJ,UAAU;MAACsD,GAAG,EAAG;IAA0C;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAChG1C,gBAAgB,KAAK,SAAS,iBAAIL,OAAA,CAACJ,UAAU;MAACsD,GAAG,EAAG;IAA2C;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACjG1C,gBAAgB,KAAK,UAAU,iBAAIL,OAAA,CAACJ,UAAU;MAAEsD,GAAG,EAAG;IAAyC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAGjG1C,gBAAgB,KAAK,WAAW,iBAAIL,OAAA,CAACH,YAAY;MAAEqD,GAAG,EAAG;IAA4C;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACvG1C,gBAAgB,KAAK,WAAW,iBAAIL,OAAA,CAACH,YAAY;MAAEqD,GAAG,EAAG;IAA6C;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACxG1C,gBAAgB,KAAK,YAAY,iBAAIL,OAAA,CAACH,YAAY;MAAEqD,GAAG,EAAG;IAA2C;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrG,CAAC;AAEV,CAAC;AAAC7C,EAAA,CAvIID,SAAS;AAAAkD,EAAA,GAATlD,SAAS;AAyIf,eAAeA,SAAS;;AAGxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}