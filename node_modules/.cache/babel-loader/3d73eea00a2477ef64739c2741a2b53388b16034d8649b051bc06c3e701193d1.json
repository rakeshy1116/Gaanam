{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshchowdary/Documents/Foundations-Software-Engineering/team3-Gaanam-project/src/GetTopArtist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './css/GetTopSong.css';\nimport './css/PlayButton.css';\nimport playButton from './images/spotify.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetTopArtist = ({\n  url\n}) => {\n  _s();\n  const [artistData, setArtistData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // fetch('https://13.59.32.217/topArtist')\n    fetch(url).then(response => response.json()).then(data => {\n      setArtistData(data);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error:', error);\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this); // Replace this with your loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: artistData && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: artistData.map((artist, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"song-image\",\n              src: artist.image,\n              alt: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://open.spotify.com/artist/${artist.id}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: playButton,\n                alt: \"Play\",\n                className: \"playButton\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(GetTopArtist, \"QT9xJjOARf+KxREZPnzmX12KT5c=\");\n_c = GetTopArtist;\nexport default GetTopArtist;\nvar _c;\n$RefreshReg$(_c, \"GetTopArtist\");","map":{"version":3,"names":["React","useState","useEffect","playButton","jsxDEV","_jsxDEV","GetTopArtist","url","_s","artistData","setArtistData","isLoading","setIsLoading","fetch","then","response","json","data","catch","error","console","className","fileName","_jsxFileName","lineNumber","columnNumber","children","map","artist","index","src","image","alt","name","href","id","target","rel","_c","$RefreshReg$"],"sources":["/Users/rakeshchowdary/Documents/Foundations-Software-Engineering/team3-Gaanam-project/src/GetTopArtist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './css/GetTopSong.css';\nimport './css/PlayButton.css';\nimport playButton from './images/spotify.png';\n\nconst GetTopArtist = ({url}) => {\n  const [artistData, setArtistData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // fetch('https://13.59.32.217/topArtist')\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {setArtistData(data); setIsLoading(false);})\n      .catch(error => {\n        console.error('Error:', error);\n        setIsLoading(false)\n      });\n  }, []);\n\n  if (isLoading) {\n    return <div className='spinner'></div>; // Replace this with your loading spinner\n  }\n\n  return (\n    <div>\n     \n      {artistData && (\n        <table>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Artist Name</th>\n              <th>ID</th>\n            </tr>\n          </thead>\n          <tbody>\n            {artistData.map((artist, index) => (\n              <tr key={index}>\n                <td><img className=\"song-image\" src={artist.image} alt={artist.name} /></td>\n                <td>{artist.name}</td>\n                <td><a href={`https://open.spotify.com/artist/${artist.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={playButton} alt=\"Play\" className='playButton'/>\n                    </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default GetTopArtist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAC7B,OAAO,sBAAsB;AAC7B,OAAOC,UAAU,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAACN,GAAG,CAAC,CACPO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MAACP,aAAa,CAACO,IAAI,CAAC;MAAEL,YAAY,CAAC,KAAK,CAAC;IAAC,CAAC,CAAC,CACzDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE;IACb,oBAAON,OAAA;MAAKgB,SAAS,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAC;EAC1C;EAEA,oBACEpB,OAAA;IAAAqB,QAAA,EAEGjB,UAAU,iBACTJ,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,eACErB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,EAAI;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdpB,OAAA;YAAAqB,QAAA,EAAI;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBpB,OAAA;YAAAqB,QAAA,EAAI;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRpB,OAAA;QAAAqB,QAAA,EACGjB,UAAU,CAACkB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5BxB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,eAAIrB,OAAA;cAAKgB,SAAS,EAAC,YAAY;cAACS,GAAG,EAAEF,MAAM,CAACG,KAAM;cAACC,GAAG,EAAEJ,MAAM,CAACK;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5EpB,OAAA;YAAAqB,QAAA,EAAKE,MAAM,CAACK;UAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBpB,OAAA;YAAAqB,QAAA,eAAIrB,OAAA;cAAG6B,IAAI,EAAG,mCAAkCN,MAAM,CAACO,EAAG,EAAE;cAACC,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,qBAAqB;cAAAX,QAAA,eAC9FrB,OAAA;gBAAKyB,GAAG,EAAE3B,UAAW;gBAAC6B,GAAG,EAAC,MAAM;gBAACX,SAAS,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GANEI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/CIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}