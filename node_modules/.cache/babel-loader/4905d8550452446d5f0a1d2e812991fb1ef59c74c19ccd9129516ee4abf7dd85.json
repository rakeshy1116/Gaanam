{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshchowdary/Documents/Foundations-Software-Engineering/team3-Gaanam-project/src/GetTopSong_6.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport playButton from './images/spotify.png';\nimport './css/GetTopSong.css';\nimport './css/PlayButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetTopSong_6 = ({\n  url\n}) => {\n  _s();\n  const [songData, setSongData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // fetch('https://13.59.32.217/topSong')\n    fetch('url').then(response => response.json()).then(data => {\n      setSongData(data);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error:', error);\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this); // Replace this with your loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songData && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Song Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: songData.map((song, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"song-image\",\n              src: song.image,\n              alt: song.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: song.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: song.preview,\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), \"Your browser does not support the audio element.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://open.spotify.com/track/${song.id}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: playButton,\n                alt: \"Play\",\n                className: \"playButton\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(GetTopSong_6, \"fAbGFAu1iG3qbGJwoIeeCrat0hg=\");\n_c = GetTopSong_6;\nexport default GetTopSong_6;\nvar _c;\n$RefreshReg$(_c, \"GetTopSong_6\");","map":{"version":3,"names":["React","useState","useEffect","playButton","jsxDEV","_jsxDEV","GetTopSong_6","url","_s","songData","setSongData","isLoading","setIsLoading","fetch","then","response","json","data","catch","error","console","className","fileName","_jsxFileName","lineNumber","columnNumber","children","map","song","index","src","image","alt","name","artist","controls","preview","type","href","id","target","rel","_c","$RefreshReg$"],"sources":["/Users/rakeshchowdary/Documents/Foundations-Software-Engineering/team3-Gaanam-project/src/GetTopSong_6.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport playButton from './images/spotify.png';\nimport './css/GetTopSong.css';\nimport './css/PlayButton.css';\n\nconst GetTopSong_6 = ({url}) => {\n  const [songData, setSongData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // fetch('https://13.59.32.217/topSong')\n    fetch('url')\n      .then(response => response.json())\n      .then(data => {setSongData(data);setIsLoading(false);})\n      .catch(error => {console.error('Error:', error);setIsLoading(false);});\n  }, []);\n\n  if (isLoading) {\n    return <div className='spinner'></div>; // Replace this with your loading spinner\n  }\n\n  return (\n    <div>\n    {/* <nav>\n        <button onClick={handleClick}>Get Top Songs</button>\n    </nav> */}\n     \n      {songData && (\n        <table>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Song Name</th>\n              <th>Artist</th>\n              <th>Preview</th>\n              <th>Play</th>\n            </tr>\n          </thead>\n          <tbody>\n            {songData.map((song, index) => (\n              <tr key={index}>\n                <td><img className=\"song-image\" src={song.image} alt={song.name} /></td>\n                <td>{song.name}</td>\n                <td>{song.artist}</td>\n                <td>\n                  <audio controls>\n                    <source src={song.preview} type=\"audio/mpeg\" />\n                    Your browser does not support the audio element.\n                  </audio>\n                </td>\n                <td><a href={`https://open.spotify.com/track/${song.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={playButton} alt=\"Play\" className='playButton'/>\n                    </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default GetTopSong_6;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}